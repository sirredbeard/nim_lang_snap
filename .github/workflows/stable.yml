name: stable
on:
  push:
    branches:
    - main
  schedule:
   - cron: 0 4 * * *
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker.pkg.github.com/sirredbeard/snap-build/snap-build:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v1
    - name: Configure snapcraft.yaml with version and release URL information
      run: |
        sudo apt-get update
        sudo apt-get install python3-pip python3-setuptools python3-wheel -y
        sudo useradd -m temp
        sudo chown -R temp /home/temp
        su temp -c "pip3 install lastversion"
        VERSION=$(su temp -c "~/.local/bin/lastversion nim-lang/Nim")
        RELEASEURL=$(su temp -c "~/.local/bin/lastversion --assets nim-lang/Nim")
        sed -i "s/VERSION/$VERSION/g" "stable/snap/snapcraft.yaml"
        sed -i "s*RELEASEURL*$RELEASEURL*g" "stable/snap/snapcraft.yaml"

    - name: Seed Snapcraft remote-build credentials into container
      env:
        REMOTE_BUILD_CREDENTIALS: ${{ secrets.REMOTE_BUILD_CREDENTIALS }}
      run: |        
        mkdir -p $HOME/.local/share/snapcraft/provider/launchpad/
        echo ${REMOTE_BUILD_CREDENTIALS} | base64 --decode --ignore-garbage > $HOME/.local/share/snapcraft/provider/launchpad/credentials

    - name: Seed Snapcraft Store credentials into container
      env:
        SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
      run: |
        cd stable
        mkdir .snapcraft
        echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg

    - name: Configure git global settings for snapcraft
      run: git config --global user.email "you@example.com" && git config --global user.name "Your Name"

    - name: Build ppc64el snap on Launchpad using remote-build and then upload to Snapcraft.io
      continue-on-error: true
      timeout-minutes: 60
      run: |         
        cd stable
        snapcraft remote-build --launchpad-accept-public-upload --build-on=ppc64el
        snapcraft upload --release=stable *ppc64el.snap
    - name: Upload ppc64el build log as artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        name: nim-lang-stable_ppc64el.txt
        path: stable/nim-lang_ppc64el.txt
        retention-days: 3

    - name: Build amd64 snap on Launchpad using remote-build and then upload to Snapcraft.io
      continue-on-error: true
      timeout-minutes: 60
      run: |         
        cd stable
        snapcraft remote-build --launchpad-accept-public-upload --build-on=amd64
        snapcraft upload --release=stable *amd64.snap 
    - name: Upload amd64 build log as artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        name: nim-lang-stable_amd64.txt
        path: stable/nim-lang_amd64.txt
        retention-days: 3

    - name: Build i386 snap on Launchpad using remote-build and then upload to Snapcraft.io
      continue-on-error: true
      timeout-minutes: 60
      run: |
        cd stable
        snapcraft remote-build --launchpad-accept-public-upload --build-on=i386
        snapcraft upload --release=stable *i386.snap
    - name: Upload i386 build log as artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        name: nim-lang-stable_i386.txt
        path: stable/nim-lang_i386.txt
        retention-days: 3                  

    - name: Build arm64 snap on Launchpad using remote-build and then upload to Snapcraft.io
      continue-on-error: true
      timeout-minutes: 60
      run: |         
        cd stable
        snapcraft remote-build --launchpad-accept-public-upload --build-on=arm64
        snapcraft upload --release=stable *arm64.snap 
    - name: Upload arm64 build log as artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        name: nim-lang-stable_arm64.txt
        path: stable/nim-lang_arm64.txt
        retention-days: 3                  

    - name: Build armhf snap on Launchpad using remote-build and then upload to Snapcraft.io
      continue-on-error: true
      timeout-minutes: 60
      run: |         
        cd stable
        snapcraft remote-build --launchpad-accept-public-upload --build-on=armhf
        snapcraft upload --release=stable *armhf.snap  
    - name: Upload armhf build log as artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        name: nim-lang-stable_armhf.txt
        path: stable/nim-lang_armhf.txt
        retention-days: 3
