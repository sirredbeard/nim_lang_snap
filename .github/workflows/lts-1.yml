name: lts-1
on:
  push:
    branches:
    - main
  schedule:
   - cron: 0 22 * * *
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: sirredbeard/snap-build
    steps:
    - uses: actions/checkout@v1
    - name: Configure snapcraft.yaml
      run: |
        VERSION=$(curl --silent "https://api.github.com/repos/nim-lang/Nim/tags" | jq '.[].name' | grep 'v1.0.' | awk 'min == "" || $1<min{min=$1} $1>max{max=$1} END{print max}' | tr -d 'v' | tr -d '"')
        RELEASEURL="https://github.com/nim-lang/Nim/archive/v"$VERSION".tar.gz"
        sed -i "s/VERSION/$VERSION/g" "lts-1/snap/snapcraft.yaml"
        sed -i "s*RELEASEURL*$RELEASEURL*g" "lts-1/snap/snapcraft.yaml"
    - name: Seed remote-build credentials into container and configure git
      env:
        REMOTE_BUILD_CREDENTIALS: ${{ secrets.REMOTE_BUILD_CREDENTIALS }}
      run: |        
        mkdir -p $HOME/.local/share/snapcraft/provider/launchpad/
        echo ${REMOTE_BUILD_CREDENTIALS} | base64 --decode --ignore-garbage > $HOME/.local/share/snapcraft/provider/launchpad/credentials
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
    - name: Build ppc64el snap on Launchpad using remote-build 
      continue-on-error: true
        cd lts-1
        snapcraft remote-build --launchpad-accept-public-upload --build-on=ppc64el
    - name: Build amd64 snap on Launchpad using remote-build 
      continue-on-error: true
        cd lts-1
        snapcraft remote-build --launchpad-accept-public-upload --build-on=amd64
    - name: Build i386 snap on Launchpad using remote-build 
      continue-on-error: true
        cd lts-1
        snapcraft remote-build --launchpad-accept-public-upload --build-on=i386    
    - name: Build arm64 snap on Launchpad using remote-build 
      continue-on-error: true
        cd lts-1
        snapcraft remote-build --launchpad-accept-public-upload --build-on=arm64
    - name: Build armhf snap on Launchpad using remote-build 
      continue-on-error: true
        cd lts-1
        snapcraft remote-build --launchpad-accept-public-upload --build-on=armhf      
    - name: Upload snaps to Snap Store
      env:
        SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
      run: |
        cd lts-1
        mkdir .snapcraft
        echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg  
        ARCHS="ppc64el arm64 armhf amd64 i386"
        for ARCH in ${ARCHS}; do
          snapcraft upload --release=stable *${ARCH}.snap || continue
        done
